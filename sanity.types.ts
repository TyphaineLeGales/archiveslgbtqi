/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ListeDesFondsContent = {
  _type: "liste-des-fonds-content";
  titleBlock?: string;
  category?: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z";
  block?: Array<
    | ({
        _key: string;
      } & Link)
    | ({
        _key: string;
      } & MultiImages)
    | ({
        _key: string;
      } & SingleImage)
    | ({
        _key: string;
      } & Richtext)
  >;
};

export type CustomHtml = {
  _type: "custom-html";
  codeTitle?: string;
  html?: Code;
  isAddFiles?: boolean;
  fileGroup?: Array<{
    title?: string;
    files?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    }>;
    _key: string;
  }>;
};

export type CreationArchives = {
  _type: "creationArchives";
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  archive?: Array<{
    title?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    status?: string;
    _key: string;
  }>;
};

export type LastEvent = {
  _type: "lastEvent";
  event?: {
    isDisplayed?: boolean;
    title?: string;
    events?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "events";
    }>;
    ctaToEvents?: string;
  };
};

export type ContactForm = {
  _type: "contact-form";
  title?: string;
  description?: string;
  recipient?: string;
};

export type Link = {
  _type: "link";
  label?: string;
  type?: "internal" | "external" | "mail";
  internal?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "pages";
  };
  external?: string;
  mail?: string;
};

export type MultiImages = {
  _type: "multi-images";
  title?: string;
  images?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    credits?: string;
    alt?: string;
    _key: string;
  }>;
};

export type SingleImage = {
  _type: "single-image";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  credits?: string;
  title?: string;
};

export type DocumentFile = {
  _type: "document-file";
  title?: string;
  file?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
};

export type RichTextAndTitle = {
  _type: "richTextAndTitle";
  title?: string;
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Richtext = {
  _type: "richtext";
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Content = {
  _type: "content";
  isLink?: boolean;
  titleBlock?: string;
  block?: Array<
    | ({
        _key: string;
      } & ContactForm)
    | ({
        _key: string;
      } & CreationArchives)
    | ({
        _key: string;
      } & CustomHtml)
    | ({
        _key: string;
      } & DocumentFile)
    | ({
        _key: string;
      } & LastEvent)
    | ({
        _key: string;
      } & Link)
    | ({
        _key: string;
      } & MultiImages)
    | ({
        _key: string;
      } & SingleImage)
    | ({
        _key: string;
      } & Richtext)
    | ({
        _key: string;
      } & RichTextAndTitle)
  >;
};

export type Blogs = {
  _id: string;
  _type: "blogs";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subTitle?: string;
  author?: string;
  year?: string;
  date?: string;
  contentBlock?: Array<
    | {
        text?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "normal"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "blockquote";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        _type: "richText";
        _key: string;
      }
    | {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        alt?: string;
        credits?: string;
        _type: "singleImage";
        _key: string;
      }
    | {
        multiImages?: Array<{
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          alt?: string;
          _key: string;
        }>;
        _type: "multiImagesObject";
        _key: string;
      }
    | {
        label?: string;
        type?: "internal" | "external" | "mail";
        internal?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "pages";
        };
        external?: string;
        mail?: string;
        _type: "links";
        _key: string;
      }
  >;
};

export type Events = {
  _id: string;
  _type: "events";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  eventType?: string;
  eventTitle?: string;
  eventEntrance?: string;
  eventDescription2?: string;
  eventDate?: {
    eventDateType?: "singleDate" | "dateRange";
    eventStartDate?: string;
    eventEndDate?: string;
  };
  eventLocation?: string;
  eventImage?: {
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
  };
};

export type Homepage = {
  _id: string;
  _type: "homepage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  hero?: {
    heroVisibility?: boolean;
    hero?: Array<{
      title?: string;
      paragraph?: string;
      image?: {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        alt?: string;
      };
      cta?: {
        ctaLabel?: string;
        ctaLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "pages";
        };
      };
      _key: string;
    }>;
  };
  secondPart?: {
    secondPartVisibility?: boolean;
    block?: Array<{
      title?: string;
      paragraph?: string;
      image?: {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        alt?: string;
      };
      cta?: {
        ctaLabel?: string;
        ctaLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "pages";
        };
        ctaScrollTo?: string;
      };
      _key: string;
    }>;
  };
  introText?: {
    introTextVisibility?: boolean;
    introTextContent?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    newsletterTextContent?: string;
  };
  upcomingEventsSection?: {
    upcomingEventsSectionVisibility?: boolean;
    upcomingEventsTitle?: string;
    upcomingEventsCTA?: {
      eventsCTATitle?: string;
      eventsCTA?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "pages";
      };
    };
    upcomingEvents?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "events";
    }>;
    upcomingEventsCTATitle?: string;
  };
  marqueeCTA?: {
    marqueeCTAVisibility?: boolean;
    marqueeContent?: string;
    marqueeLink?: string;
  };
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  globalSettings?: {
    siteTitle?: string;
    siteDescription?: string;
    ogImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
  header?: {
    logo?: {
      logoImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    headerLinks?: Array<{
      type?: "internal" | "external";
      linkPosition?: "left" | "right";
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "pages";
      };
      externalLink?: {
        title?: string;
        url?: string;
      };
      _key: string;
    }>;
  };
  footer?: {
    partnerLogos?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "logoImage";
      _key: string;
    }>;
    logo?: {
      logoImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    addressGroup?: {
      addressTitle?: string;
      addressContent?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?:
          | "normal"
          | "h1"
          | "h2"
          | "h3"
          | "h4"
          | "h5"
          | "h6"
          | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      mailAddress?: string;
    };
    socialGroup?: Array<{
      socialName?: string;
      socialLink?: string;
      socialLinkImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _type: "socialBlock";
      _key: string;
    }>;
    footerLinks?: Array<{
      groupName?: string;
      modules?: Array<{
        type?: "internal" | "external" | "text";
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "pages";
        };
        externalLink?: {
          title?: string;
          url?: string;
        };
        text?: string;
        _key: string;
      }>;
      _key: string;
    }>;
  };
};

export type Pages = {
  _id: string;
  _type: "pages";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  introduction?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  content?: Array<
    {
      _key: string;
    } & Content
  >;
  contentFromListeDeFonds?: Array<
    {
      _key: string;
    } & ListeDesFondsContent
  >;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Code = {
  _type: "code";
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | ListeDesFondsContent
  | CustomHtml
  | CreationArchives
  | LastEvent
  | ContactForm
  | Link
  | MultiImages
  | SingleImage
  | DocumentFile
  | RichTextAndTitle
  | Richtext
  | Content
  | Blogs
  | Events
  | Homepage
  | Settings
  | Pages
  | SanityFileAsset
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | MediaTag
  | Slug
  | Code;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: settingsQuery
// Query: *[_type == "settings"][0] {  "globalSettings": {    "siteTitle": globalSettings.siteTitle,    "siteDescription": globalSettings.siteDescription,    "ogImage": globalSettings.ogImage.asset->url,    "altText": globalSettings.ogImage.alt,  },  "header": header{    "logo": logo {      "logoImage": logoImage.asset->url,      alt,    },    "links": headerLinks[] {      _key,      type,      linkPosition,      "internalLinkDetails": internalLink-> {        _id,        _key,        _type,        title,        "slug": slug.current      },      "externalLinkDetails": {        _key,        "title": externalLink.title,        "url": externalLink.url      }    }  },  "footer": footer{    "logo": logo {      "logoImage": logoImage.asset->url,      alt,    },    partnerLogos[] {      "logoImage": logoImage.asset->url,      alt    },        "addressGroup": addressGroup {      addressTitle,      addressContent[]{        ...,      },      mailAddress,    },    "socialGroup": socialGroup[] {      socialName,      socialLink,      socialLinkImage{        "imageUrl": asset->url,        alt,      },    },    "footerLinks": footerLinks[]{      _key,      groupName,      modules[]{        type,        "internalLink": internalLink->{          title,          "slug": slug.current        },        externalLink{          title,          url        },        text      }  }  }}
export type SettingsQueryResult = {
  globalSettings: {
    siteTitle: string | null;
    siteDescription: string | null;
    ogImage: string | null;
    altText: string | null;
  };
  header: {
    logo: {
      logoImage: string | null;
      alt: string | null;
    } | null;
    links: Array<{
      _key: string;
      type: "external" | "internal" | null;
      linkPosition: "left" | "right" | null;
      internalLinkDetails: {
        _id: string;
        _key: null;
        _type: "pages";
        title: string | null;
        slug: string | null;
      } | null;
      externalLinkDetails: {
        _key: string;
        title: string | null;
        url: string | null;
      };
    }> | null;
  } | null;
  footer: {
    logo: {
      logoImage: string | null;
      alt: string | null;
    } | null;
    partnerLogos: Array<{
      logoImage: null;
      alt: string | null;
    }> | null;
    addressGroup: {
      addressTitle: string | null;
      addressContent: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?:
          | "blockquote"
          | "h1"
          | "h2"
          | "h3"
          | "h4"
          | "h5"
          | "h6"
          | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      mailAddress: string | null;
    } | null;
    socialGroup: Array<{
      socialName: string | null;
      socialLink: string | null;
      socialLinkImage: {
        imageUrl: string | null;
        alt: null;
      } | null;
    }> | null;
    footerLinks: Array<{
      _key: string;
      groupName: string | null;
      modules: Array<{
        type: "external" | "internal" | "text" | null;
        internalLink: {
          title: string | null;
          slug: string | null;
        } | null;
        externalLink: {
          title: string | null;
          url: string | null;
        } | null;
        text: string | null;
      }> | null;
    }> | null;
  } | null;
} | null;
// Variable: homepageQuery
// Query: *[_type == "homepage"][0] {  _key,  _id,  _type,  "heroVisibility": hero.heroVisibility,  "hero": hero.hero[]{        ...,    _id,    _key,    "image": image{      "imageUrl": image.asset->url,      alt,    },    cta {      ctaLabel,      ctaLink->{        _type,        "slug": slug.current      }    }  },  "secondPartVisibility": secondPart.secondPartVisibility,  "secondPart": secondPart.block[]{     ...,  _id,  _key,  "image": image{    "imageUrl": image.asset->url,    alt,  },  cta {    ctaLabel,    ctaLink->{      _type,      "slug": slug.current    },    ctaScrollTo  },  },  introText {    introTextVisibility,    introTextContent[]{      ...,  },    newsletterTextContent  },  "upcomingEventsSection": upcomingEventsSection {    upcomingEventsSectionVisibility,    upcomingEventsTitle,    upcomingEventsCTA{      eventsCTATitle,      eventsCTA->,    },    "upcomingEvents": upcomingEvents[]-> {  _id,  eventType,  eventTitle,  slug,  eventDate,  eventDescription2,  eventLocation,  "image": eventImage{      "imageUrl": image.asset->url,      alt,    },},    upcomingEventsCTATitle,  },  marqueeCTA {    marqueeCTAVisibility,    marqueeContent,    marqueeLink,  } }
export type HomepageQueryResult = {
  _key: null;
  _id: string;
  _type: "homepage";
  heroVisibility: boolean | null;
  hero: Array<{
    title?: string;
    paragraph?: string;
    image: {
      imageUrl: string | null;
      alt: string | null;
    } | null;
    cta: {
      ctaLabel: string | null;
      ctaLink: {
        _type: "pages";
        slug: string | null;
      } | null;
    } | null;
    _key: string;
    _id: null;
  }> | null;
  secondPartVisibility: boolean | null;
  secondPart: Array<{
    title?: string;
    paragraph?: string;
    image: {
      imageUrl: string | null;
      alt: string | null;
    } | null;
    cta: {
      ctaLabel: string | null;
      ctaLink: {
        _type: "pages";
        slug: string | null;
      } | null;
      ctaScrollTo: string | null;
    } | null;
    _key: string;
    _id: null;
  }> | null;
  introText: {
    introTextVisibility: boolean | null;
    introTextContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    newsletterTextContent: string | null;
  } | null;
  upcomingEventsSection: {
    upcomingEventsSectionVisibility: boolean | null;
    upcomingEventsTitle: string | null;
    upcomingEventsCTA: {
      eventsCTATitle: string | null;
      eventsCTA: {
        _id: string;
        _type: "pages";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        title?: string;
        slug?: Slug;
        introduction?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        content?: Array<
          {
            _key: string;
          } & Content
        >;
        contentFromListeDeFonds?: Array<
          {
            _key: string;
          } & ListeDesFondsContent
        >;
      } | null;
    } | null;
    upcomingEvents: Array<{
      _id: string;
      eventType: string | null;
      eventTitle: string | null;
      slug: null;
      eventDate: {
        eventDateType?: "dateRange" | "singleDate";
        eventStartDate?: string;
        eventEndDate?: string;
      } | null;
      eventDescription2: string | null;
      eventLocation: string | null;
      image: {
        imageUrl: string | null;
        alt: string | null;
      } | null;
    }> | null;
    upcomingEventsCTATitle: string | null;
  } | null;
  marqueeCTA: {
    marqueeCTAVisibility: boolean | null;
    marqueeContent: string | null;
    marqueeLink: string | null;
  } | null;
} | null;
// Variable: eventQuery
// Query: *[_type == "events" && slug.current == $event][0]{  _id,  eventType,  eventTitle,  slug,  eventEntrance,  eventDate,  eventDescription2,  eventLocation,  "image": eventImage{      "imageUrl": image.asset->url,      alt,    },}
export type EventQueryResult = {
  _id: string;
  eventType: string | null;
  eventTitle: string | null;
  slug: null;
  eventEntrance: string | null;
  eventDate: {
    eventDateType?: "dateRange" | "singleDate";
    eventStartDate?: string;
    eventEndDate?: string;
  } | null;
  eventDescription2: string | null;
  eventLocation: string | null;
  image: {
    imageUrl: string | null;
    alt: string | null;
  } | null;
} | null;
// Variable: pastEventQuery
// Query: *[_type == "events" && defined(eventDate) && eventDate.eventStartDate <= now()] | order(eventDate.eventStartDate desc) [0..3] {  _id,  eventType,  eventTitle,  slug,  eventEntrance,  eventDate,  eventDescription2,  eventLocation,  "image": eventImage{      "imageUrl": image.asset->url,      alt,    },}
export type PastEventQueryResult = Array<{
  _id: string;
  eventType: string | null;
  eventTitle: string | null;
  slug: null;
  eventEntrance: string | null;
  eventDate: {
    eventDateType?: "dateRange" | "singleDate";
    eventStartDate?: string;
    eventEndDate?: string;
  } | null;
  eventDescription2: string | null;
  eventLocation: string | null;
  image: {
    imageUrl: string | null;
    alt: string | null;
  } | null;
}>;
// Variable: lastEventQuery
// Query: *[_type == "events" && defined(eventDate) && eventDate.eventStartDate >= now()] | order(eventDate.eventStartDate desc) {  _id,  eventType,  eventTitle,  slug,  eventEntrance,  eventDate,  eventDescription2,  eventLocation,  "image": eventImage{    "imageUrl": image.asset->url,    alt,  },}
export type LastEventQueryResult = Array<{
  _id: string;
  eventType: string | null;
  eventTitle: string | null;
  slug: null;
  eventEntrance: string | null;
  eventDate: {
    eventDateType?: "dateRange" | "singleDate";
    eventStartDate?: string;
    eventEndDate?: string;
  } | null;
  eventDescription2: string | null;
  eventLocation: string | null;
  image: {
    imageUrl: string | null;
    alt: string | null;
  } | null;
}>;
// Variable: blogsQuery
// Query: *[_type == "blogs"  && year >= $minYear && year <= $maxYear] | order(year desc)  {  _id,  title,  subTitle,  author,  year,  date,  contentBlock[]{    _type == "richText" => {      "richText": text    },    _type == "singleImage" => {      "singleImage": {        "imageUrl": image.asset->url,        alt,        credits      }    },    _type == "multiImagesObject" => {      "multiImagesObject": multiImages[]{        "imageUrl": image.asset->url,        alt      }    },    _type == "links" => {      "links": {        label,        type,        "internalLink": internal->title,        external,        mail      }    }  }}
export type BlogsQueryResult = Array<{
  _id: string;
  title: string | null;
  subTitle: string | null;
  author: string | null;
  year: string | null;
  date: string | null;
  contentBlock: Array<
    | {
        links: {
          label: string | null;
          type: "external" | "internal" | "mail" | null;
          internalLink: string | null;
          external: string | null;
          mail: string | null;
        };
      }
    | {
        multiImagesObject: Array<{
          imageUrl: string | null;
          alt: string | null;
        }> | null;
      }
    | {
        richText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        singleImage: {
          imageUrl: string | null;
          alt: string | null;
          credits: string | null;
        };
      }
  > | null;
}>;
// Variable: pagesSlugQuery
// Query: *[_type == "pages" && defined(slug.current)] {  _updatedAt,  "slug": slug.current,}
export type PagesSlugQueryResult = Array<{
  _updatedAt: string;
  slug: string | null;
}>;
// Variable: pagesContentQuery
// Query: *[_type == "pages" && slug.current == $slug][0] {  _id,  title,  "slug": slug.current,  "contentModulde": content[]{    _id,    _key,    _type,    titleBlock,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "richTextTitle": title,  "richtextTitleText": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,        _id,  "isDisplayed": event.isDisplayed,  "lastEventLabel": event.title,  "goToAllEvents": event.ctaToEvents,        _id,  "creationArchivesTitle": intro[],  "creationArchivesArchive": archive[] {    title,    description[],    status,    },        _id,  "customHtml": html,  "codeTitle": codeTitle,  "isAddFiles": isAddFiles,  "fileGroup": fileGroup[] {    title,    files[] {      asset->,      },      },        _id,  title,  "fileUrl": file.asset->url,  "fileName": file.asset->originalFilename,    },  }}
export type PagesContentQueryResult = {
  _id: string;
  title: string | null;
  slug: string | null;
  contentModulde: Array<{
    _id: null;
    _key: string;
    _type: "content";
    titleBlock: string | null;
    contenBlock: Array<
      | {
          _type: "contact-form";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: string | null;
          richtextTitleText: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: string | null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "creationArchives";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: null;
          richtextTitleText: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          creationArchivesArchive: Array<{
            title: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            status: string | null;
          }> | null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "custom-html";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: null;
          richtextTitleText: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: Code | null;
          codeTitle: string | null;
          isAddFiles: boolean | null;
          fileGroup: Array<{
            title: string | null;
            files: Array<{
              asset: {
                _id: string;
                _type: "sanity.fileAsset";
                _createdAt: string;
                _updatedAt: string;
                _rev: string;
                originalFilename?: string;
                label?: string;
                title?: string;
                description?: string;
                altText?: string;
                sha1hash?: string;
                extension?: string;
                mimeType?: string;
                size?: number;
                assetId?: string;
                uploadId?: string;
                path?: string;
                url?: string;
                source?: SanityAssetSourceData;
              } | null;
            }> | null;
          }> | null;
          title: null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "document-file";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: string | null;
          richtextTitleText: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: string | null;
          fileUrl: string | null;
          fileName: string | null;
        }
      | {
          _type: "lastEvent";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: null;
          richtextTitleText: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: boolean | null;
          lastEventLabel: string | null;
          goToAllEvents: string | null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: null;
          richtextTitleText: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: string | null;
          richtextTitleText: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: string | null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          richTextTitle: null;
          richtextTitleText: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "richTextAndTitle";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          richTextTitle: string | null;
          richtextTitleText: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: string | null;
          fileUrl: null;
          fileName: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          richTextTitle: string | null;
          richtextTitleText: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
          isDisplayed: null;
          lastEventLabel: null;
          goToAllEvents: null;
          creationArchivesTitle: null;
          creationArchivesArchive: null;
          customHtml: null;
          codeTitle: null;
          isAddFiles: null;
          fileGroup: null;
          title: string | null;
          fileUrl: null;
          fileName: null;
        }
    > | null;
  }> | null;
} | null;
// Variable: listeDeFondsQuery
// Query: *[_type == "pages" && slug.current == "liste-des-fonds"][0] {  _id,  title,  "slug": slug.current,  introduction[]{    ...,  },  "contentModule": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  },  "contentModuleAD": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["a-d"]],  "contentModuleEH": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["e-h"]],  "contentModuleIM": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["i-m"]],  "contentModuleNQ": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["n-q"]],  "contentModuleRU": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["r-u"]],  "contentModuleVZ": contentFromListeDeFonds[] | order(titleBlock asc){    _id,    _key,    _type,    titleBlock,    category,    "contenBlock": block[]{      _type,        _id,  _key,  "richtext": text[],        _id,  "imageTitle": title,  "imageUrl": image.asset->url,  credits,        _id,  "multiImages": images[] {    "imageUrl": image.asset->url,    alt,    credits,  },        _id,  "linkLabel": label,  // external  external,  // internal  "internal": internal->{    _id,    _type,    title,    "slug": slug.current,  },  "mail": mail,    },  }[category in ["v-z"]],}
export type ListeDeFondsQueryResult = {
  _id: string;
  title: string | null;
  slug: string | null;
  introduction: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  contentModule: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleAD: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleEH: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleIM: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleNQ: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleRU: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
  contentModuleVZ: Array<{
    _id: null;
    _key: string;
    _type: "liste-des-fonds-content";
    titleBlock: string | null;
    category: "a-d" | "e-h" | "i-m" | "n-q" | "r-u" | "v-z" | null;
    contenBlock: Array<
      | {
          _type: "link";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: string | null;
          external: string | null;
          internal: {
            _id: string;
            _type: "pages";
            title: string | null;
            slug: string | null;
          } | null;
          mail: string | null;
        }
      | {
          _type: "multi-images";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: null;
          credits: null;
          multiImages: Array<{
            imageUrl: string | null;
            alt: string | null;
            credits: string | null;
          }> | null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "richtext";
          _id: null;
          _key: string;
          richtext: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          imageTitle: null;
          imageUrl: null;
          credits: null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
      | {
          _type: "single-image";
          _id: null;
          _key: string;
          richtext: null;
          imageTitle: string | null;
          imageUrl: string | null;
          credits: string | null;
          multiImages: null;
          linkLabel: null;
          external: null;
          internal: null;
          mail: null;
        }
    > | null;
  }> | null;
} | null;

// Source: ./app/(next)/[slug]/page.tsx
// Variable: pageSlugs
// Query: *[_type == "pages"]{slug}
export type PageSlugsResult = Array<{
  slug: Slug | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "settings"][0] {\n  "globalSettings": {\n    "siteTitle": globalSettings.siteTitle,\n    "siteDescription": globalSettings.siteDescription,\n    "ogImage": globalSettings.ogImage.asset->url,\n    "altText": globalSettings.ogImage.alt,\n  },\n  "header": header{\n    "logo": logo {\n      "logoImage": logoImage.asset->url,\n      alt,\n    },\n    "links": headerLinks[] {\n      _key,\n      type,\n      linkPosition,\n      "internalLinkDetails": internalLink-> {\n        _id,\n        _key,\n        _type,\n        title,\n        "slug": slug.current\n      },\n      "externalLinkDetails": {\n        _key,\n        "title": externalLink.title,\n        "url": externalLink.url\n      }\n    }\n  },\n  "footer": footer{\n    "logo": logo {\n      "logoImage": logoImage.asset->url,\n      alt,\n    },\n    partnerLogos[] {\n      "logoImage": logoImage.asset->url,\n      alt\n    },\n    \n    "addressGroup": addressGroup {\n      addressTitle,\n      addressContent[]{\n        ...,\n      },\n      mailAddress,\n    },\n    "socialGroup": socialGroup[] {\n      socialName,\n      socialLink,\n      socialLinkImage{\n        "imageUrl": asset->url,\n        alt,\n      },\n    },\n    "footerLinks": footerLinks[]{\n      _key,\n      groupName,\n      modules[]{\n        type,\n        "internalLink": internalLink->{\n          title,\n          "slug": slug.current\n        },\n        externalLink{\n          title,\n          url\n        },\n        text\n      }\n  }\n\n  }\n}': SettingsQueryResult;
    '*[_type == "homepage"][0] {\n  _key,\n  _id,\n  _type,\n\n  "heroVisibility": hero.heroVisibility,\n  "hero": hero.hero[]{\n    \n    ...,\n    _id,\n    _key,\n    "image": image{\n      "imageUrl": image.asset->url,\n      alt,\n    },\n    cta {\n      ctaLabel,\n      ctaLink->{\n        _type,\n        "slug": slug.current\n      }\n    }\n\n  },\n\n  "secondPartVisibility": secondPart.secondPartVisibility,\n  "secondPart": secondPart.block[]{\n   \n  ...,\n  _id,\n  _key,\n  "image": image{\n    "imageUrl": image.asset->url,\n    alt,\n  },\n  cta {\n    ctaLabel,\n    ctaLink->{\n      _type,\n      "slug": slug.current\n    },\n    ctaScrollTo\n  },\n\n  },\n\n  introText {\n    introTextVisibility,\n    introTextContent[]{\n      ...,\n  },\n    newsletterTextContent\n  },\n\n  "upcomingEventsSection": upcomingEventsSection {\n    upcomingEventsSectionVisibility,\n    upcomingEventsTitle,\n    upcomingEventsCTA{\n      eventsCTATitle,\n      eventsCTA->,\n    },\n    "upcomingEvents": upcomingEvents[]-> {\n  _id,\n  eventType,\n  eventTitle,\n  slug,\n  eventDate,\n  eventDescription2,\n  eventLocation,\n  "image": eventImage{\n      "imageUrl": image.asset->url,\n      alt,\n    },\n},\n    upcomingEventsCTATitle,\n  },\n\n  marqueeCTA {\n    marqueeCTAVisibility,\n    marqueeContent,\n    marqueeLink,\n  }\n \n}': HomepageQueryResult;
    '*[_type == "events" && slug.current == $event][0]{\n  _id,\n  eventType,\n  eventTitle,\n  slug,\n  eventEntrance,\n  eventDate,\n  eventDescription2,\n  eventLocation,\n  "image": eventImage{\n      "imageUrl": image.asset->url,\n      alt,\n    },\n}': EventQueryResult;
    '*[_type == "events" && defined(eventDate) && eventDate.eventStartDate <= now()] | order(eventDate.eventStartDate desc) [0..3] {\n  _id,\n  eventType,\n  eventTitle,\n  slug,\n  eventEntrance,\n  eventDate,\n  eventDescription2,\n  eventLocation,\n  "image": eventImage{\n      "imageUrl": image.asset->url,\n      alt,\n    },\n}': PastEventQueryResult;
    '*[_type == "events" && defined(eventDate) && eventDate.eventStartDate >= now()] | order(eventDate.eventStartDate desc) {\n  _id,\n  eventType,\n  eventTitle,\n  slug,\n  eventEntrance,\n  eventDate,\n  eventDescription2,\n  eventLocation,\n  "image": eventImage{\n    "imageUrl": image.asset->url,\n    alt,\n  },\n}': LastEventQueryResult;
    '*[_type == "blogs"  && year >= $minYear && year <= $maxYear] | order(year desc)  {\n  _id,\n  title,\n  subTitle,\n  author,\n  year,\n  date,\n  contentBlock[]{\n    _type == "richText" => {\n      "richText": text\n    },\n    _type == "singleImage" => {\n      "singleImage": {\n        "imageUrl": image.asset->url,\n        alt,\n        credits\n      }\n    },\n    _type == "multiImagesObject" => {\n      "multiImagesObject": multiImages[]{\n        "imageUrl": image.asset->url,\n        alt\n      }\n    },\n    _type == "links" => {\n      "links": {\n        label,\n        type,\n        "internalLink": internal->title,\n        external,\n        mail\n      }\n    }\n  }\n}': BlogsQueryResult;
    '*[_type == "pages" && defined(slug.current)] {\n  _updatedAt,\n  "slug": slug.current,\n}': PagesSlugQueryResult;
    '*[_type == "pages" && slug.current == $slug][0] {\n  _id,\n  title,\n  "slug": slug.current,\n  "contentModulde": content[]{\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "richTextTitle": title,\n  "richtextTitleText": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n      \n  _id,\n  "isDisplayed": event.isDisplayed,\n  "lastEventLabel": event.title,\n  "goToAllEvents": event.ctaToEvents,\n\n      \n  _id,\n  "creationArchivesTitle": intro[],\n  "creationArchivesArchive": archive[] {\n    title,\n    description[],\n    status,\n    },\n\n      \n  _id,\n  "customHtml": html,\n  "codeTitle": codeTitle,\n  "isAddFiles": isAddFiles,\n  "fileGroup": fileGroup[] {\n    title,\n    files[] {\n      asset->,\n      },\n      },\n\n      \n  _id,\n  title,\n  "fileUrl": file.asset->url,\n  "fileName": file.asset->originalFilename,\n\n    },\n  }\n}\n': PagesContentQueryResult;
    '*[_type == "pages" && slug.current == "liste-des-fonds"][0] {\n  _id,\n  title,\n  "slug": slug.current,\n  introduction[]{\n    ...,\n  },\n  "contentModule": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  },\n  "contentModuleAD": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["a-d"]],\n  "contentModuleEH": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["e-h"]],\n  "contentModuleIM": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["i-m"]],\n  "contentModuleNQ": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["n-q"]],\n  "contentModuleRU": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["r-u"]],\n  "contentModuleVZ": contentFromListeDeFonds[] | order(titleBlock asc){\n    _id,\n    _key,\n    _type,\n    titleBlock,\n    category,\n    "contenBlock": block[]{\n      _type,\n      \n  _id,\n  _key,\n  "richtext": text[],\n\n      \n  _id,\n  "imageTitle": title,\n  "imageUrl": image.asset->url,\n  credits,\n\n      \n  _id,\n  "multiImages": images[] {\n    "imageUrl": image.asset->url,\n    alt,\n    credits,\n  },\n\n      \n  _id,\n  "linkLabel": label,\n  // external\n  external,\n  // internal\n  "internal": internal->{\n    _id,\n    _type,\n    title,\n    "slug": slug.current,\n  },\n  "mail": mail,\n\n    },\n  }[category in ["v-z"]],\n}\n': ListeDeFondsQueryResult;
    '*[_type == "pages"]{slug}': PageSlugsResult;
  }
}
